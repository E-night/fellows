model: lessons
---
title: Lessons
---
week3title:

Week 3: Roadmapping + Journal Club
---
week3:
### Roadmapping

- Read over this roadmapping tutorial from Mozilla Open Leaders & check out some of the examples. We won’t be following this exactly, but it is a good overview. [https://mozilla.github.io/open-leadership-training-series/articles/opening-your-project/start-your-project-roadmap/](https://mozilla.github.io/open-leadership-training-series/articles/opening-your-project/start-your-project-roadmap/)
- The [syllabus](http://fellows.frictionlessdata.io/syllabus/) can be thought of as the roadmap for the programme, but the point of this exercise is for each of you to map these goals to your own timeline.
- Take the syllabus, and map out the main goals, or “milestones”.  These include things like blogs, learning goals, and workshops. (This can be taken pretty much straight from the syllabus)
- Keep in mind dates and events for the upcoming 9 months. Will you need to change the dates for a specific milestone due to your schedule (work event, school exam, vacation)?
- Think about your personal goals for this fellowship. What are your short term, medium term, and long term goals? Are there milestones that reflect these goals?
- Are there additional milestones you want to add to your roadmap? For example, writing additional blogs, giving additional workshops? These can also be added later.
- Using project management tools: I recommend using project management tools like [Trello](https://trello.com), [GitHub projects](https://github.com/features/project-management/), or simply a  pen + paper planner to write down your main milestone tasks to help you keep track of your progress. If you want to use Trello or GitHub projects and need help, Lilly can help you.

### Journal club
- We’ll be reading “Do you speak open science? Resources and tips to learn the language” by Paola Masuzzo​ and Lennart Martens [https://peerj.com/preprints/2689/](https://peerj.com/preprints/2689/)
- You will all meet virtually to answer the discussion questions and talk about the paper
- **Discussion questions:**
  1. The authors identify four "pillars" of open science: data, code, papers, and review. Do you agree with these? Are there aspects of open science that you think are missing?
  2. When sharing raw data, what other information should also be released?
  3. What are some ways that researchers can openly release their data?
  4. Why is it useful to share the code used in an experiment?
  5. What are some ways to openly share code or software?
  6. What are preprints and how are they different from traditional publications?
  7. What are some reasons why researchers might not publish in open access journals? What are your thoughts on those reasons?
  8. What are some models of open peer review?
  9. What are some benefits and risks of open peer review?

***
---
week4title:
Nov 18: Data Packages
---
week4:
### Data Packages - using [Data Package Creator](http://create.frictionlessdata.io/)
- Work through this tutorial on well-packaged datasets [https://frictionlessdata.io/field-guide/well-packaged-datasets/](https://frictionlessdata.io/field-guide/well-packaged-datasets/)
- Watch this video on packaging data [https://www.youtube.com/watch?v=VrdPj28-L9g](https://www.youtube.com/watch?v=VrdPj28-L9g)
- ** In Slack, answer these questions:**
  1. What makes up a data package?
  2. What kind of metadata would you include for the data you work with?

### *OPTIONAL* - Data Packages - using our Python [datapackage.py library](https://github.com/frictionlessdata/datapackage-py)
- Use these instructions to import datapackage.py and create a new datapackage [http://frictionlessdata.io/docs/creating-tabular-data-packages-in-python/](http://frictionlessdata.io/docs/creating-tabular-data-packages-in-python/)
- Follow these instructions to work with an existing Data Package in Python - note: stop at the 'Loading into an SQL database' step. [http://frictionlessdata.io/docs/using-data-packages-in-python/](http://frictionlessdata.io/docs/using-data-packages-in-python/)
- Play around with this [Jupyter notebook](https://github.com/frictionlessdata/fellows/blob/master/docs/datapackage-py-notebook.ipynb)

### *OPTIONAL* - Data Packages - using our R [datapackage.r library](https://github.com/frictionlessdata/datapackage-r)
- Use these instructions to install datapackage.r and create a new datapackage [http://frictionlessdata.io/docs/creating-tabular-data-packages-in-r/](http://frictionlessdata.io/docs/creating-tabular-data-packages-in-r/)
- Follow these instructions to work with an existing Data Package in R - note: stop at the 'Loading into an SQL database' step. [http://frictionlessdata.io/docs/using-data-packages-in-r/](http://frictionlessdata.io/docs/using-data-packages-in-r/)
***
## Using Specs and Schemas
- Read through this introduction to [JSON schemas](https://json-schema.org/understanding-json-schema/about.html#about) by json-schema.org
- Read through the [Frictionless Data Specs](https://frictionlessdata.io/specs/)
- Focus on the [DataPackage specs](https://frictionlessdata.io/specs/data-package/) & the [csv dialect](https://frictionlessdata.io/specs/csv-dialect/)

***
---
week5title:
Goodtables Data Validation
---
week5:
### Validate your data with the Goodtables browser tool and with the command line interface
- Read 
- [Understanding JSON Schemas](https://json-schema.org/understanding-json-schema/about.html#about) by json-schema.org
- Follow the first half of this tutorial to learn (1) how to validate data with the goodtables browser tool, and then continue on to the second half to learn (2) how to use the goodtables command line interface [https://frictionlessdata.io/field-guide/validated-tabular-data/](https://frictionlessdata.io/field-guide/validated-tabular-data/)
- Follow along with this video on validating on the command line with goodtables: [https://www.youtube.com/watch?v=PqtM6d696eY&list=LLQe-pXn0XZzmRzvyOMZpfEg](https://www.youtube.com/watch?v=PqtM6d696eY&list=LLQe-pXn0XZzmRzvyOMZpfEg)
- Read through this guide on how to continuously validate your data with goodtables [https://frictionlessdata.io/field-guide/automatically-validated-tabular-data/](https://frictionlessdata.io/field-guide/automatically-validated-tabular-data/)
- Watch this video to see continuous validation in action: [https://www.youtube.com/watch?v=9YHwu34D_vM&list=LLQe-pXn0XZzmRzvyOMZpfEg](https://www.youtube.com/watch?v=9YHwu34D_vM&list=LLQe-pXn0XZzmRzvyOMZpfEg)
- For an recap, read through this documentation about goodtables [https://frictionlessdata.io/docs/validating-data/](https://frictionlessdata.io/docs/validating-data/)
- ** In Slack, answer these questions:**
  1. What is one reason why you should validate your data?
  2. What information does goodtables use to "know" the correct data type?
***
---
week6title:
Audience Mapping
---
week6:
### Knowing your audience
- Read through this information on [audience mapping](https://docs.google.com/document/d/1_IqVXa8yy-Qg9Xk4DOQ18TtaaeNSq40aVviyeXBKsUw/)
- Make a copy of this [template](https://docs.google.com/document/d/1laIdjjdcdav7m1CDrZJEX3sHJiKd9IVQX0kBN6HRn7I/edit#) and fill it out yourself
---